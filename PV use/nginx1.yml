apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: nginx1
  labels:
    app: nginx
    instance: nginx1
    component: frontend
spec:
  selector:
    matchLabels:
      app: nginx
      instance: nginx1
  template: 
    metadata:
      labels:
        app: nginx
        instance: nginx1
    spec:
      containers:
        - name: nginx1
          image: nginx:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx1.conf
      volumes: 
        - name: nginx-config-volume
          persistentVolumeClaim:
            claimName: storage-local-pvc
          
--- 
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-conf
# data:
#   nginx.conf: |
#     events {}
#     http {
#       error_log /var/log/nginx/error.log warn;
#       access_log /var/log/nginx/access.log;

#       log_format proxy_log  '$proxy_protocol_addr - $remote_user [$time_local] "$request" '
#                             '$status $body_bytes_sent "$http_referer" '
#                             '"$http_user_agent" "$http_x_forwarded_for"';
#       access_log /var/log/nginx/proxy.log proxy_log;

#       log_format healthz_log  '$remote_addr - $remote_user [$time_local] "$request" '
#                               '$status $body_bytes_sent "$http_referer" '
#                               '"$http_user_agent"';
#       access_log /var/log/nginx/healthz.log healthz_log;

#       server {
#         listen 80;  

#         location /healthz {
#           add_header Content-Type text/plain;
#           return 200 'The service is alive';
#           access_log /var/log/nginx/healthz.log healthz_log;
#         }

#         location /proxy {

#           proxy_pass http://nginx2-service:80/proxy;
#           proxy_set_header Host $host;
#           proxy_set_header X-Real-IP $remote_addr;
#           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
#           add_header Content-Type text/plain;
#           access_log /var/log/nginx/proxy.log proxy_log;
#         }

#         location / {
#           add_header Content-Type text/plain;
#           return 200 'OK';
#           access_log /var/log/nginx/access.log;
#         }
#       }
#     }

---
apiVersion: v1 
kind: Service
metadata:
  name: nginx1-service
  labels:   
    app: nginx
    instance: nginx1
    component: frontend
spec:
  type: NodePort
  selector: 
    app: nginx
    instance: nginx1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30001