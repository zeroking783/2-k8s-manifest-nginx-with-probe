apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: {{ .Values.DeploymentName }}
  labels:
    app: {{ .Values.Labels.AppName}}
    instance: {{ .Values.Labels.Instance }}
    component: {{ .Values.Labels.Component }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.Labels.AppName}}
      instance: {{ .Values.Labels.Instance }}
  template: 
    metadata:
      labels:
        app: {{ .Values.Labels.AppName}}
        instance: {{ .Values.Labels.Instance }}
    spec:
      containers:
        - name: {{ .Values.DeploymentName }}
          image: "nginx:latest"
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: {{ .Values.ConfigMapName }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
      volumes: 
        - name: {{ .Values.ConfigMapName }}
          configMap:
            name: {{ .Values.ConfigMapName }}
          
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.ConfigMapName }}
data:
  nginx.conf: |
    {{- include .Values.NginxConfig . | nindent 4 }}

---
apiVersion: v1 
kind: Service 
metadata: 
  name: {{ .Values.ServiceName }}
  labels: 
    app: {{ .Values.Labels.AppName}}
    instance: {{ .Values.Labels.Instance }}
    component: {{ .Values.Labels.Component }}
spec:
  type: NodePort
  selector: 
    app: {{ .Values.Labels.AppName}}
    instance: {{ .Values.Labels.Instance }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: {{ .Values.NodePort }}
