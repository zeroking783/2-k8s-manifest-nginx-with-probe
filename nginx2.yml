apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: nginx2
  labels:
    app: nginx
    instance: nginx2
    component: frontend
spec:
  selector:
    matchLabels:
      app: nginx
      instance: nginx2
  template: 
    metadata:
      labels:
        app: nginx
        instance: nginx2
    spec:
      containers:
        - name: nginx2
          image: nginx:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
      volumes: 
        - name: nginx-conf
          configMap:
            name: nginx-conf
          
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {}
    http {
      error_log /var/log/nginx/error.log warn;
      access_log /var/log/nginx/access.log;

      log_format healthz_log  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent"';
      access_log /var/log/nginx/healthz.log healthz_log;

      log_format proxy_log  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/proxy.log proxy_log;

      server {
        listen 80;  

        location /healthz {
          add_header Content-Type text/plain;
          return 200 'The service is alive';
          access_log /var/log/nginx/healthz.log healthz_log;
        }  

        location /proxy {
          add_header Conetnt-Type text/plain;
          return 200 'Test proxy response received. Your request has been logged.';
          access_log /var/log/nginx/proxy.log proxy_log;
        }

        location / {
          add_header Content-Type text/plain;
          return 200 'OK';
          access_log /var/log/nginx/access.log;
        }
      }
    }

---
apiVersion: v1 
kind: Service 
metadata: 
  name: nginx2-service
  labels: 
    app: nginx
    instance: nginx2
    component: frontend
spec:
  type: NodePort
  selector: 
    service: nginx2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30002